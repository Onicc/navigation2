
<!--
  This Behavior Tree replans the global path periodically at 1 Hz and it also has
  recovery actions specific to planning / control as well as general system issues.
  This will be continuous if a kinematically valid planner is selected.
-->
<root main_tree_to_execute="MainTree">
  <BehaviorTree ID="MainTree">
    <RecoveryNode number_of_retries="6" name="NavigateRecovery">
      <PipelineSequence name="NavigateWithReplanning">
        <RateController hz="10.0">
          <Sequence name="Nav">
            <FindNearestWaypoint waypoints="{waypoints}" angular_distance_weight="1" max_search_dist="5" input_closest_index="{waypoint_index}" robot_frame="base_link" distance_forward="10.0" distance_backward="0.0" goals="{goals}" waypoint_index="{waypoint_index}" waypoint="{waypoint}"/>
            <Fallback name="PathSelection">
              <!-- Manual mode -->
              <Sequence name="ManualMode">
                <NavigationStateComparison current_navigation_state="{navigation_state}" navigation_state="manual"/>
                <RecoveryNode number_of_retries="1" name="ComputePathToPose">
                  <ComputePathToPose goal="{manual_goal}" path="{path}" planner_id="GridBased"/>
                  <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                </RecoveryNode>
              </Sequence>
              <!-- Automatic mode -->
              <Fallback name="AutomaticMode">
                <!-- Curb following mode -->
                <Sequence name="CurbFollowingMode">
                  <NavigationStateComparison current_navigation_state="{navigation_state}" navigation_state="curb_following"/>
                  <Fallback name="SwitchToPathFollowingMode">
                    <Inverter>
                      <CurbToPathFollow odometry_gps="{odometry_gps}" max_position_covariance="0.0004" max_angle_covariance="0.0001" waypoint="{waypoint}" curb_traction_point="{curb_traction_point}" gps_recovery_hold_time="1.0"/>
                    </Inverter>
                    <SetNavigationStateAction input_state="path_following" output_state="{navigation_state}"/>
                  </Fallback>
                  <FindPoseOnExtension pose_on_path="{curb_traction_point}" distance="4.0" pose_on_extension="{curb_traction_point_extension}"/>
                  <Fallback name="GeneratePath">
                    <RecoveryNode number_of_retries="2" name="ComputePath">
                      <Sequence name="ComputePath">
                        <ComputePathToPose goal="{curb_traction_point}" path="{path}" planner_id="StraightLine"/>
                        <ComputePathToPose goal="{curb_traction_point_extension}" path="{curb_path_extension}" planner_id="StraightLine"/>
                      </Sequence>
                      <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                    </RecoveryNode>
                    <SetNavigationStateAction input_state="path_following" output_state="{navigation_state}"/>
                  </Fallback>
                </Sequence>
                <!-- Path following mode -->
                <Sequence name="PathFollowingMode">
                  <NavigationStateComparison current_navigation_state="{navigation_state}" navigation_state="path_following"/>
                  <Fallback name="SwitchToCurbFollowingMode">
                    <Inverter>
                      <PathToCurbFollow odometry_gps="{odometry_gps}" max_position_covariance="0.0004" max_angle_covariance="0.0001" waypoint="{waypoint}" curb_traction_point="{curb_traction_point}"/>
                    </Inverter>
                    <SetNavigationStateAction input_state="curb_following" output_state="{navigation_state}"/>
                  </Fallback>
                  <Fallback name="ComputePathToPathAndSwitchState">
                    <RecoveryNode number_of_retries="2" name="ComputePathToPath">
                      <ComputePathThroughPoses goals="{goals}" path="{path}" planner_id="StraightLine"/>
                      <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                    </RecoveryNode>
                    <Fallback name="ComputePathToPathAndSwitchState">
                      <Sequence name="SwitchState">
                        <PathToBypassObstacle odometry_gps="{odometry_gps}" max_position_covariance="0.0004" max_angle_covariance="0.0001" waypoint="{waypoint}"/>
                        <!-- <BetweenWaypointIndex closest_index="{waypoint_index}" upper_index="0" lower_index = "0"/> -->
                        <SetNavigationStateAction input_state="bypass_obstacle" output_state="{navigation_state}"/>
                      </Sequence>
                      <Exception content="前方有障碍物但路径不支持绕障碍"/>
                    </Fallback>
                  </Fallback>
                </Sequence>
                <!-- Path planning around obstacles mode. -->
                <Sequence name="PathPlanningAroundObstaclesMode">
                  <NavigationStateComparison current_navigation_state="{navigation_state}" navigation_state="bypass_obstacle"/>
                  <Fallback name="FindGoal">
                    <RecoveryNode number_of_retries="2" name="TryFindGoal">
                      <FindGoalFromCostmap goals="{goals}" costmap_msg="{global_costmap}" safe_distance="3.0" goal="{farthest_obstacle_point}"/>
                      <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                    </RecoveryNode>
                    <Exception content="无法生成绕障碍目标点"/>
                  </Fallback>
                  <Fallback name="SwitchToPathFollowingMode">
                    <Inverter>
                      <GoalReached goal="{farthest_obstacle_point}" global_frame="map" robot_base_frame="base_link"/>
                    </Inverter>
                    <SetNavigationStateAction input_state="path_following" output_state="{navigation_state}"/>
                  </Fallback>
                  <Fallback name="ComputePoseToPath">
                    <RecoveryNode number_of_retries="2" name="ComputePoseToPath">
                      <ComputePathToPose goal="{farthest_obstacle_point}" path="{path}" planner_id="GridBased"/>
                      <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
                    </RecoveryNode>
                    <Exception content="无法生成绕障碍路径"/>
                  </Fallback>
                </Sequence>
              </Fallback>
            </Fallback>
          </Sequence>
        </RateController>
        <ReactiveSequence name="MonitorAndFollowPath">
          <Fallback name="Pause">
            <Inverter>
              <IsPathEmpty path="{path}"/>
            </Inverter>
            <RetryUntilSuccessful num_attempts="1">
              <SequenceStar name="CancelingControlAndWait">
                <CancelControl name="ControlCancel"/>
                <Wait wait_duration="5"/>
              </SequenceStar>
            </RetryUntilSuccessful>
          </Fallback>
          <Fallback name="FollowPath">
            <IsPathEmpty path="{path}"/>
            <RecoveryNode number_of_retries="1" name="FollowPath">
              <FollowPath path="{path}" controller_id="FollowPath"/>
              <Sequence name="ClearingActions">
                <ClearEntireCostmap name="ClearLocalCostmap-Context" service_name="local_costmap/clear_entirely_local_costmap"/>
                <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
              </Sequence>
            </RecoveryNode>
          </Fallback>
        </ReactiveSequence>
        <!-- <Sequence name="MonitorAndFollowPath">
          <RecoveryNode number_of_retries="1" name="FollowPath">
            <Sequence name="FollowPath">
              <FollowPath path="{path}" controller_id="FollowPath"/>
            </Sequence>
            <Sequence name="ClearingActions">
              <ClearEntireCostmap name="ClearLocalCostmap-Context" service_name="local_costmap/clear_entirely_local_costmap"/>
              <ClearEntireCostmap name="ClearGlobalCostmap-Context" service_name="global_costmap/clear_entirely_global_costmap"/>
            </Sequence>
          </RecoveryNode>
        </Sequence> -->
      </PipelineSequence>
      <ReactiveFallback name="RecoveryFallback">
        <WaypointsUpdated/>
        <RoundRobin name="RecoveryActions">
          <Sequence name="ClearingActions">
            <ClearEntireCostmap name="ClearLocalCostmap-Subtree" service_name="local_costmap/clear_entirely_local_costmap"/>
            <ClearEntireCostmap name="ClearGlobalCostmap-Subtree" service_name="global_costmap/clear_entirely_global_costmap"/>
          </Sequence>
          <Wait wait_duration="5"/>
        </RoundRobin>
      </ReactiveFallback>
    </RecoveryNode>
  </BehaviorTree>
</root>